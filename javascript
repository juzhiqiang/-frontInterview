1。闭包
    闭包即函数与其引用的周边状态（词法环境）绑定在一起形成的（封装）组合。换句话说，闭包可以让我们从函数内部访问其外部函数的作用域。在 JavaScript 中，每当函数创建，闭包就被创建。
为了使用闭包，我们可以简单的将一个函数定义在另一个函数的内部，然后将其暴露给外部，返回这个函数或者是把它传给另一个函数。
内部函数会拥有访问外部函数作用域中变量的能力，即使是外部函数已经执行完毕并销毁。
    
    ž这里面提到的关键
        1、闭包是一个函数
2，能够访问另外一个函数作用域中的变量
